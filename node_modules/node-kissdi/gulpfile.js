(function() {
  var coffee, coffeelint, g, mocha, notify, plumber;

  g = require("gulp");

  mocha = require("gulp-mocha");

  notify = require("gulp-notify");

  coffeelint = require("gulp-coffeelint");

  plumber = require("gulp-plumber");

  coffee = require("gulp-coffee");

  g.task("test", function() {
    return g.src("./tests/specs/**/*.coffee").pipe(plumber({
      errorHandler: notify.onError("<%= error.message %>")
    })).pipe(coffeelint("./coffeelint.json")).pipe(coffeelint.reporter()).pipe(coffeelint.reporter("failOnWarning")).pipe(mocha({
      "reporter": "dot"
    }));
  });

  g.task("gulpfile-syntax", function() {
    return g.src("./gulpfile.coffee").pipe(plumber({
      errorHandler: notify.onError("<%= error.message %>")
    })).pipe(coffeelint("./coffeelint.json")).pipe(coffeelint.reporter()).pipe(coffeelint.reporter("failOnWarning"));
  });

  g.task("compile", ["test"], function() {
    return g.src("./src/**/*.coffee").pipe(plumber({
      errorHandler: notify.onError("<%= error.message %>")
    })).pipe(coffee()).pipe(g.dest("./lib"));
  });

  g.task("default", function() {
    g.watch(["./tests/specs/**/*.coffee", "./src/**/*.coffee"], ["compile"]);
    return g.watch("./gulpfile.coffee", ["gulpfile-syntax"]);
  });

}).call(this);
